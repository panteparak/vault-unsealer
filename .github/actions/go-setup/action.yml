name: 'Go Setup'
description: 'Setup Go environment with caching and mod verification'

inputs:
  go-version:
    description: 'Go version to use'
    required: false
    default: '1.24'
  cache:
    description: 'Enable Go module caching'
    required: false
    default: 'true'
  verify-modules:
    description: 'Verify go.mod and go.sum are tidy'
    required: false
    default: 'false'

outputs:
  go-version:
    description: 'Go version that was installed'
    value: ${{ steps.setup.outputs.go-version }}
  go-cache-hit:
    description: 'Whether the Go cache was hit'
    value: ${{ steps.setup.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Setup Go
      id: setup
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}
        cache: ${{ inputs.cache }}

    - name: Verify Go installation
      shell: bash
      run: |
        echo "🔍 Verifying Go installation..."

        GO_VERSION=$(go version)
        echo "✅ $GO_VERSION"

        # Set output
        INSTALLED_VERSION=$(go version | grep -oE 'go[0-9]+\.[0-9]+(\.[0-9]+)?' | sed 's/go//')
        echo "go-version=$INSTALLED_VERSION" >> $GITHUB_OUTPUT

        # Show Go environment
        echo "📋 Go environment:"
        echo "  GOROOT: $(go env GOROOT)"
        echo "  GOPATH: $(go env GOPATH)"
        echo "  GOCACHE: $(go env GOCACHE)"
        echo "  GOMODCACHE: $(go env GOMODCACHE)"

    - name: Verify go.mod and go.sum
      if: inputs.verify-modules == 'true'
      shell: bash
      run: |
        echo "🔍 Verifying go.mod and go.sum are tidy..."

        # Check if go.mod exists
        if [[ ! -f "go.mod" ]]; then
          echo "⚠️ No go.mod found, skipping verification"
          exit 0
        fi

        # Run go mod tidy
        go mod tidy

        # Check for changes
        if ! git diff --exit-code -- go.mod go.sum; then
          echo "❌ go.mod/go.sum are not tidy. Please run 'go mod tidy' locally and commit the changes."
          echo ""
          echo "Changes found:"
          git --no-pager diff go.mod go.sum
          exit 1
        fi

        echo "✅ go.mod and go.sum are tidy"

    - name: Download dependencies
      shell: bash
      run: |
        echo "📦 Downloading Go dependencies..."

        if [[ -f "go.mod" ]]; then
          go mod download
          echo "✅ Dependencies downloaded"
        else
          echo "ℹ️ No go.mod found, skipping dependency download"
        fi

    - name: Setup cache info
      shell: bash
      run: |
        echo "💾 Go cache information:"

        # Show cache directories and sizes
        if command -v du &> /dev/null; then
          GOCACHE_DIR=$(go env GOCACHE)
          GOMODCACHE_DIR=$(go env GOMODCACHE)

          if [[ -d "$GOCACHE_DIR" ]]; then
            GOCACHE_SIZE=$(du -sh "$GOCACHE_DIR" 2>/dev/null | cut -f1 || echo "unknown")
            echo "  Build cache: $GOCACHE_SIZE"
          fi

          if [[ -d "$GOMODCACHE_DIR" ]]; then
            GOMODCACHE_SIZE=$(du -sh "$GOMODCACHE_DIR" 2>/dev/null | cut -f1 || echo "unknown")
            echo "  Module cache: $GOMODCACHE_SIZE"
          fi
        fi
